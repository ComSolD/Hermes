# Generated by Django 5.1.5 on 2025-01-29 07:04

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NHLMatch',
            fields=[
                ('match_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('status', models.CharField(max_length=20)),
                ('season', models.CharField(max_length=10)),
                ('stage', models.CharField(max_length=20)),
                ('date', models.DateField()),
            ],
            options={
                'verbose_name': 'Матч',
                'verbose_name_plural': 'Матчи',
                'db_table': 'nhl_match',
            },
        ),
        migrations.CreateModel(
            name='NHLPlayer',
            fields=[
                ('player_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Игрок',
                'verbose_name_plural': 'Игроки',
                'db_table': 'nhl_player',
            },
        ),
        migrations.CreateModel(
            name='NHLTeam',
            fields=[
                ('team_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
                'db_table': 'nhl_team',
            },
        ),
        migrations.CreateModel(
            name='NHLPlayerStat',
            fields=[
                ('stat_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('position', models.CharField(max_length=20)),
                ('G', models.IntegerField()),
                ('A', models.IntegerField()),
                ('plusMinus', models.IntegerField()),
                ('S', models.IntegerField()),
                ('SM', models.IntegerField()),
                ('BS', models.IntegerField()),
                ('PN', models.IntegerField()),
                ('PIM', models.IntegerField()),
                ('HT', models.IntegerField()),
                ('TK', models.IntegerField()),
                ('GV', models.IntegerField()),
                ('SA', models.IntegerField()),
                ('GA', models.IntegerField()),
                ('SV', models.IntegerField()),
                ('SVProcent', models.IntegerField()),
                ('ESSV', models.IntegerField()),
                ('PPSV', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlmatch')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlplayer')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlteam')),
            ],
            options={
                'verbose_name': 'Статистика грока',
                'verbose_name_plural': 'Статистика игроков',
                'db_table': 'nhl_player_stat',
            },
        ),
        migrations.AddField(
            model_name='nhlmatch',
            name='team1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='nhl.nhlteam'),
        ),
        migrations.AddField(
            model_name='nhlmatch',
            name='team2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='nhl.nhlteam'),
        ),
        migrations.CreateModel(
            name='NHLBet',
            fields=[
                ('bet_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('ML_team1_parlay', models.FloatField(blank=True, null=True)),
                ('ML_team2_parlay', models.FloatField(blank=True, null=True)),
                ('ML_result', models.CharField(blank=True, max_length=36, null=True)),
                ('total', models.FloatField()),
                ('over_total_parlay', models.FloatField(blank=True, null=True)),
                ('under_total_parlay', models.FloatField(blank=True, null=True)),
                ('total_result', models.CharField(blank=True, max_length=10, null=True)),
                ('handicap_team1', models.FloatField(blank=True, null=True)),
                ('handicap_team1_parlay', models.FloatField(blank=True, null=True)),
                ('handicap_team2', models.FloatField(blank=True, null=True)),
                ('handicap_team2_parlay', models.FloatField(blank=True, null=True)),
                ('handicap_result', models.CharField(blank=True, max_length=36, null=True)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlmatch')),
                ('team1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets_as_team1', to='nhl.nhlteam')),
                ('team2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bets_as_team2', to='nhl.nhlteam')),
            ],
            options={
                'verbose_name': 'Ставка',
                'verbose_name_plural': 'Ставки',
                'db_table': 'nhl_bet',
            },
        ),
        migrations.CreateModel(
            name='NHLTeamPtsStat',
            fields=[
                ('team_pts_stat_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('total', models.IntegerField()),
                ('totalMissed', models.IntegerField()),
                ('total_T1', models.IntegerField()),
                ('total_T1Missed', models.IntegerField()),
                ('total_T2', models.IntegerField()),
                ('total_T2Missed', models.IntegerField()),
                ('total_T3', models.IntegerField()),
                ('total_T3Missed', models.IntegerField()),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlmatch')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlteam')),
            ],
            options={
                'verbose_name': 'Статистика команды по очкам',
                'verbose_name_plural': 'Статистика команд по очкам',
                'db_table': 'nhl_team_pts_stat',
            },
        ),
        migrations.CreateModel(
            name='NHLTeamStat',
            fields=[
                ('team_stat_ID', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('result', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=10)),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlmatch')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nhl.nhlteam')),
            ],
            options={
                'verbose_name': 'Статистика команды',
                'verbose_name_plural': 'Статистика команд',
                'db_table': 'nhl_team_stat',
            },
        ),
    ]
